@mixin list-unstyled{

	list-style: none;
  padding: 0;
  margin: 0;
}

@mixin table-align{
	width: 100%;
	height: 100%;
	vertical-align: middle;
}

@mixin bg-cover{
	background-size: cover;
    background-repeat: no-repeat;
    background-position: center center;
}

@mixin font-awesome{
	font: normal normal normal #{$fa-font-size-base}/#{$fa-line-height-base} FontAwesome; // shortening font declaration
	font-size: inherit; // can't have font-size inherit on line above, so need to override
	text-rendering: auto; // optimizelegibility throws things off #1094
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

@mixin button-style{
  border:1px solid $button-border-color;
  display: inline-block;
  font-family: $neou-greek;
  font-weight: bold;
  text-transform: uppercase;
  background-color: $button-background-color;
}

@mixin opacity-hover{
  @include transition(opacity 0.3s linear);

  &:hover{
    opacity: 0.5;
  }
}

@mixin tile-hide-title{

  .icon-title{
    text-align: center;

    .tiles.list-view &{
      text-align: left;
    }
  }
  
  .post-title{
    display: none;

    .tiles.list-view &{
      display: inline-block;
    }
  }
}

@mixin tile-hide-desc{

  .desc{

    display: none;

    .tiles.list-view &{
      display: block;
    }
  }
  
}

@mixin tile-hide-price{

  .info-button:not(.reverse){
    display: none;
  }
  
}

@mixin tile-change-more-text{

  .info-button.reverse{

    > span{

      text-indent: -9999px;
      overflow: hidden;

      .tiles.list-view &{
        text-indent: 0;

        &:before{
          display: none;
        }
      }

      &:before{
        display: block;
        width: 100%;
        text-align: center;
        content: '+';
        text-indent: 0;
      }
    }
  }
}

@mixin tile-hide-more{

  .info-button.reverse{
          
    display: none;

    .tiles.list-view &{
      display: block;
    }
  }
}

@mixin tile-hide-buttons{
  
  .info-buttons{
    display: none;

    .tiles.list-view &{
      display: block;
    }
  }
}

@mixin tile-buttons-block{

  .info-buttons{

    .info-button{
      float: none;
      display: block;
      width: 100%;
      margin-left: 0;
      margin-top: 5px;

      &:first-child{
        margin-top: 0;
      }

      .tiles.list-view &{
        float: left;
        width: auto;
        margin-top: 0;
        margin-left: 15px;

        &:first-child{
          margin-left: 0;
        }
      }
    }

    .reverse{
      .tiles.list-view &{
        width: 120px;
      }
    }
  }
  
}

@mixin tile-icon-title-block{
  
  .icon-title {

    text-align: center;

    .tiles.list-view &{
      text-align: left;
    }

    > *{
      display: block;

      .tiles.list-view &{
      display: inline-block;
      }
    }

    .post-title{
      margin-top: 10px;
      font-size: 18px;
      line-height: 28px;

      .tiles.list-view &{
        margin-top: 0;
        font-size: 30px;
        line-height: 35px;
      }
    }
  }
}

/**
 * Fix for vw, vh, vmin, vmax on iOS 7.
 * http://caniuse.com/#feat=viewport-units
 * https://gist.github.com/BenMorel/e9e34c08360ebbbd0634
 *
 * This fix works by replacing viewport units with px values on known screen sizes.
 *
 * iPhone 6 and 6 Plus cannot run iOS 7, so are not targeted by this fix.
 * Target devices running iOS 8+ will incidentally execute the media query,
 * but this will still produce the expected result; so this is not a problem.
 *
 * As an example, replace:
 *
 *   height: 50vh;
 *   font-size: 5vmin;
 *
 * with:
 *
 *   @include viewport-unit(height, 50vh);
 *   @include viewport-unit(font-size, 5vmin);
 */
@mixin viewport-unit($property, $value) {
  #{$property}: $value;

  $unit: unit($value);

  @if (index((vw, vh, vmin, vmax), $unit) != null) {
    $devices: (
      (768px, 1024px), // iPad (all versions)
      (320px, 480px),  // iPhone 4
      (320px, 568px)   // iPhone 5, 5C, 5S
    );

    @each $device in $devices {
      $device-width: nth($device, 1);
      $device-height: nth($device, 2);

      $device-query: "only screen and (-webkit-min-device-pixel-ratio: 1)";
      $device-query: "#{$device-query} and (device-width: #{$device-width})";
      $device-query: "#{$device-query} and (device-height: #{$device-height})";

      $percent: $value / ($value * 0 + 1); // see https://github.com/sass/sass/issues/533

      $percent-width: $device-width * $percent / 100;
      $percent-height: $device-height * $percent / 100;

      @if ($unit == vmin or $unit == vmax) {
        @media #{$device-query} {
          #{$property}: if($unit == vmin, $percent-width, $percent-height);
        }
      }
      @else {
        @media #{$device-query} and (orientation: portrait) {
          #{$property}: if($unit == vw, $percent-width, $percent-height);
        }

        @media #{$device-query} and (orientation: landscape) {
          #{$property}: if($unit == vw, $percent-height, $percent-width);
        }
      }
    }
  }
}
